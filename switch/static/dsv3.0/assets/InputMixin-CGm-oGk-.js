import{r as l,g as h,k as s}from"./index-C2PWchud.js";const r=o=>class extends o{constructor(){super(),this.addEventListener("keydown",this.handleSubmit)}handleSubmit(t){t&&t.keyCode===13&&this.submitForm()}},c=o=>class extends r(o){static get styles(){return[l(h)]}static get properties(){return{_type:String,icon:String,leftIcon:Object,rightIcon:Object,name:String,required:Boolean,hint:String,help:String,addons:Object,value:Object,validation:Object,pattern:Object,maxLength:Number,minLength:Number,min:Object,max:Object,inputMode:String,options:Array,isLoading:Boolean,rows:Number,cols:Number,submit_name:String,e:{type:Object}}}constructor(){super(),this.hint="",this.help="",this._type=this.type,this.value="",this.submit_name="",this.options=[],this.isLoading=!1,this.e=null,this.required=!1}updated(t){t.has("validation")&&this.externalValidationTrigger(),(t.has("name")||t.has("e"))&&(this.e&&(this.id=this.e.id,this.icon=this.e.icon,this.name=this.e.name,this.hint=this.e.details.hint,this.help=this.e.details.help,this.pattern=this.e.details.pattern,this.maxLength=this.e.max,this.minLength=this.e.min,this.required=this.e.required,this.max=this.e.details.maxLength,this.min=this.e.details.minLength,this.options=this.e.details.options,this.rows=this.e.details.rows,this.cols=this.e.details.cols,this.inputMode=this.e.details.inputMode),this.hint=this.hint?this.hint:"",this.help=this.help?this.help:"",this.pattern=this.pattern?this.pattern:"",this.setDefaultIcons(),window.onbeforeunload=()=>{localStorage.removeItem("activeInputId")})}connectedCallback(){super.connectedCallback(),window.addEventListener("keyInput",t=>this.onNumberPadKeyInputListener(t)),window.addEventListener("numberPicker",t=>this.onNumberPickerListener(t))}disconnectedCallback(){super.disconnectedCallback(),window.removeEventListener("keyInput",t=>this.onNumberPadKeyInputListener(t)),window.removeEventListener("numberPicker",t=>this.onNumberPickerListener(t)),localStorage.removeItem("activeInputId")}setDefaultIcons(){this.icon&&(this.leftIcon={type:"adaptive-ui-icon",name:this.icon,title:""}),this._type==="password"&&(this.leftIcon={type:"adaptive-ui-icon",name:"MdRemoveRedEye",title:"Show"}),this.type==="search"&&(this.leftIcon={type:"adaptive-ui-icon",name:"MdLocationSearching",title:"Search"})}invalid(t){this.rightIcon={type:"adaptive-ui-icon",name:"MdError",datacolor:"red"},(async()=>await this.updateComplete)().then(()=>{const i=this.shadowRoot.querySelector(this.type==="select"?".select":this.type==="textarea"?"textarea":"input"),n=this.shadowRoot.querySelector(".help"),a=this.shadowRoot.querySelector(".is-right");this.resetValidationStyles(),i.classList.add("is-danger"),n.classList.add("is-danger"),a!==null&&a.classList.add("has-text-danger"),n.innerText=t.validationMessage})}valid(t){this.rightIcon={type:"adaptive-ui-icon",name:"MdDoneAll",title:"Valid"},(async()=>await this.updateComplete)().then(()=>{const i=this.shadowRoot.querySelector(this.type==="select"?".select":this.type==="textarea"?"textarea":"input"),n=this.shadowRoot.querySelector(".help"),a=this.shadowRoot.querySelector(".is-right");this.resetValidationStyles(),i.classList.add("is-success"),n.classList.add("is-success"),a!==null&&a.classList.add("has-text-success"),n.innerText=""}),setTimeout(()=>{this.resetValidationStyles(),this.rightIcon=void 0},3e3)}resetValidationStyles(){const t=this.shadowRoot.querySelector(this.type==="select"?".select":this.type==="textarea"?"textarea":"input"),e=this.shadowRoot.querySelector(".help"),i=this.shadowRoot.querySelector(".is-right");t.classList.remove("is-success","is-danger"),e.classList.remove("is-success","is-danger"),e.innerText=this.help,i!==null&&i.classList.remove("has-text-success","has-text-danger")}passwordVisibility(){const t=this.shadowRoot.querySelector("input");this.type!=="textarea"&&(t.type==="password"?(t.type="text",this.leftIcon={type:"adaptive-ui-icon",name:"MdDisabledVisible",title:"Hide"}):(t.type="password",this.leftIcon={type:"adaptive-ui-icon",name:"MdFaEye",title:"Show"}))}getInput(){return this.shadowRoot.querySelector(this.type==="select"?"select":this.type==="textarea"?"textarea":"input")}getValue(){return this.getInput().value}get renderMode(){return this.pl.renderMode}get type(){return"text"}onLeftIconClickHandler(){this.type==="password"&&this.passwordVisibility()}onRightIconClickHandler(){}onNumberPadKeyInputListener(t){if(this.shadowRoot.querySelector("#"+localStorage.getItem("activeInputId"))!==null&&this.type==="number"){const i=t.detail;i==="-1"?this.value=this.value.substring(0,this.value.length-1):Number.isInteger(i)?this.value=this.value+i:i==="."?!this.value.includes(".")&&this.value!=""&&(this.value+="."):i==="reset"&&(this.value="")}}onNumberPickerListener(t){if(this.e.details.isNumberCompatible){const e=t.detail,a=document.querySelector("number-input").shadowRoot.querySelector(".input");a?a.value=e:console.error("Input field not found in the shadow root.")}}onInputFocusHandler(){localStorage.setItem("activeInputId",this.id)}onInputHandler(t){this.value=this.getValue(),this.dispatchEvent(new CustomEvent("on-input",{bubbles:!0,composed:!0,detail:t}))}onChangeHandler(t){this.value=this.getValue(),this.dispatchEvent(new CustomEvent("on-change",{bubbles:!0,composed:!0,detail:t}))}onKeyPressHandler(t){this.dispatchEvent(new CustomEvent("on-key-press",{bubbles:!0,composed:!0,detail:t})),this.type==="number"&&this.maxLength&&t.target.value.length>=this.maxLength&&t.preventDefault()}externalValidationTrigger(){this.validation?(typeof this.validation=="string"&&(this.validation=JSON.parse(this.validation)),this.validation.isValid?this.valid(this.validation):this.invalid(this.validation)):this.resetValidationStyles()}iconLoader(t){const e=typeof t=="string"?JSON.parse(t):t;return getComputedStyle(document.documentElement).getPropertyValue("--md-sys-color-onPrimaryContainer"),e.type==="fa-icon"?s`
            <i class=${e.name} title=${e.title}></i>
        `:s`
            <adaptive-ui-icon datacolor="${e.datacolor}"  icon=${e.name} title=${e.title}></adaptive-ui-icon>
        `}render(){return s`
            <div class="content">
                <div class="field">
                <label class="label">${this.name}</label>
                    
                    <div class="control ${this.leftIcon?"has-icons-left":""}  ${this.rightIcon?"has-icons-right":""} ${this.isLoading?"is-loading":""}">
                        ${this.type==="select"?s`
                                    <div class="select" style="width: 100%;">
                                        <select style="width: 100%;font-family:var(--family-sans-serif);padding-bottom:0.8rem;border-radius:var(--CornerSmall) !important;" name=${this.name} formName=${this.formNmae} value=${this.value} @change=${t=>this.onChangeHandler(t)}>
                                            ${this.options.map(t=>s`<option value="${t.value}" ?selected="${t.value===this.value}">${t.label}</option>`)}    
                                        </select>
                                    </div>
                            `:this.type==="textarea"?s`
                                <textarea class="textarea" style="width: 100%;" placeholder=${this.hint} minlength=${this.minLength}
                                maxlength=${this.maxLength} rows=${this.rows} cols=${this.cols} style="padding: 18px 55px; border: 1px solid var(--md-sys-color-outlineVariant);font-family:var(--family-sans-serif)"></textarea>
                            `:s`
                                <input id=${this.id} class="input" placeholder=${this.hint} type=${this.type} value=${this.value} 
                                    @input=${t=>this.onInputHandler(t)} @focus=${()=>this.onInputFocusHandler()} 
                                    @keypress=${t=>this.onKeyPressHandler(t)} pattern=${this.pattern} minlength=${this.minLength}
                                    maxlength=${this.maxLength} max=${this.max} min=${this.min} inputmode=${this.inputMode} style="padding: 13.5px 45px; border: 1px solid var(--md-sys-color-outlineVariant);border-radius:var(--CornerSmall) !important;"
                                >
                            `}
                        ${this.leftIcon&&this.type!=="textarea"?s`
                                <span class="icon is-small is-left" style="pointer-events: auto; left: 10px; top: 10%" @click=${()=>this.onLeftIconClickHandler()}>${this.iconLoader(this.leftIcon)}</span>
                            `:""}
                        ${this.rightIcon&&this.type!=="textarea"?s`
                         
                         <span class="icon is-small is-right" style="height:100%" @click=${()=>this.onRightIconClickHandler()}>${this.iconLoader(this.rightIcon)}</span>
                            `:""}
                    </div>
                    <small class="help">${this.help}</small>
                </div>
            </div>
        `}};export{c as I};
