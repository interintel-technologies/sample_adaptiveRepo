import{R as f,K as m,L as w,M as y}from"./index-C2PWchud.js";import{P as v,B as b}from"./polymer-legacy-CVdXdTHq.js";/**
@license
Copyright (c) 2015 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at
http://polymer.github.io/LICENSE.txt The complete set of authors may be found at
http://polymer.github.io/AUTHORS.txt The complete set of contributors may be
found at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as
part of the polymer project is also subject to an additional IP rights grant
found at http://polymer.github.io/PATENTS.txt
*/v({is:"iron-request",hostAttributes:{hidden:!0},properties:{xhr:{type:Object,notify:!0,readOnly:!0,value:function(){return new XMLHttpRequest}},response:{type:Object,notify:!0,readOnly:!0,value:function(){return null}},status:{type:Number,notify:!0,readOnly:!0,value:0},statusText:{type:String,notify:!0,readOnly:!0,value:""},completes:{type:Object,readOnly:!0,notify:!0,value:function(){return new Promise((function(e,t){this.resolveCompletes=e,this.rejectCompletes=t}).bind(this))}},progress:{type:Object,notify:!0,readOnly:!0,value:function(){return{}}},aborted:{type:Boolean,notify:!0,readOnly:!0,value:!1},errored:{type:Boolean,notify:!0,readOnly:!0,value:!1},timedOut:{type:Boolean,notify:!0,readOnly:!0,value:!1}},get succeeded(){if(this.errored||this.aborted||this.timedOut)return!1;var e=this.xhr.status||0;return e===0||e>=200&&e<300},send:function(e){var t=this.xhr;if(t.readyState>0)return null;t.addEventListener("progress",(function(r){this._setProgress({lengthComputable:r.lengthComputable,loaded:r.loaded,total:r.total}),this.fire("iron-request-progress-changed",{value:this.progress})}).bind(this)),t.addEventListener("error",(function(r){this._setErrored(!0),this._updateStatus();var o=e.rejectWithRequest?{error:r,request:this}:r;this.rejectCompletes(o)}).bind(this)),t.addEventListener("timeout",(function(r){this._setTimedOut(!0),this._updateStatus();var o=e.rejectWithRequest?{error:r,request:this}:r;this.rejectCompletes(o)}).bind(this)),t.addEventListener("abort",(function(){this._setAborted(!0),this._updateStatus();var r=new Error("Request aborted."),o=e.rejectWithRequest?{error:r,request:this}:r;this.rejectCompletes(o)}).bind(this)),t.addEventListener("loadend",(function(){if(this._updateStatus(),this._setResponse(this.parseResponse()),!this.succeeded){var r=new Error("The request failed with status code: "+this.xhr.status),o=e.rejectWithRequest?{error:r,request:this}:r;this.rejectCompletes(o);return}this.resolveCompletes(this)}).bind(this)),this.url=e.url;var n=e.async!==!1;t.open(e.method||"GET",e.url,n);var i={json:"application/json",text:"text/plain",html:"text/html",xml:"application/xml",arraybuffer:"application/octet-stream"}[e.handleAs],s=e.headers||Object.create(null),d=Object.create(null);for(var c in s)d[c.toLowerCase()]=s[c];if(s=d,i&&!s.accept&&(s.accept=i),Object.keys(s).forEach(function(r){/[A-Z]/.test(r)&&b._error("Headers must be lower case, got",r),t.setRequestHeader(r,s[r])},this),n){t.timeout=e.timeout;var u=e.handleAs;(e.jsonPrefix||!u)&&(u="text"),t.responseType=t._responseType=u,e.jsonPrefix&&(t._jsonPrefix=e.jsonPrefix)}t.withCredentials=!!e.withCredentials;var a=this._encodeBodyObject(e.body,s["content-type"]);return t.send(a),this.completes},parseResponse:function(){var e=this.xhr,t=e.responseType||e._responseType,n=!this.xhr.responseType,i=e._jsonPrefix&&e._jsonPrefix.length||0;try{switch(t){case"json":if(n||e.response===void 0)try{return JSON.parse(e.responseText)}catch{return console.warn("Failed to parse JSON sent from "+e.responseURL),null}return e.response;case"xml":return e.responseXML;case"blob":case"document":case"arraybuffer":return e.response;case"text":default:{if(i)try{return JSON.parse(e.responseText.substring(i))}catch{return console.warn("Failed to parse JSON sent from "+e.responseURL),null}return e.responseText}}}catch(s){this.rejectCompletes(new Error("Could not parse response. "+s.message))}},abort:function(){this._setAborted(!0),this.xhr.abort()},_encodeBodyObject:function(e,t){if(typeof e=="string")return e;var n=e;switch(t){case"application/json":return JSON.stringify(n);case"application/x-www-form-urlencoded":return this._wwwFormUrlEncode(n)}return e},_wwwFormUrlEncode:function(e){if(!e)return"";var t=[];return Object.keys(e).forEach(function(n){t.push(this._wwwFormUrlEncodePiece(n)+"="+this._wwwFormUrlEncodePiece(e[n]))},this),t.join("&")},_wwwFormUrlEncodePiece:function(e){return e==null||!e.toString?"":encodeURIComponent(e.toString().replace(/\r?\n/g,`\r
`)).replace(/%20/g,"+")},_updateStatus:function(){this._setStatus(this.xhr.status),this._setStatusText(this.xhr.statusText===void 0?"":this.xhr.statusText)}});const x=e=>class extends e{constructor(){super();const t=window.location;this.protocol=t.protocol,this.hostname=t.hostname,this.port=t.port}static get properties(){return{protocol:String,hostname:String,port:Number}}baseUrl(){let t=this.protocol+"//"+this.hostname+":"+this.port;return window.process.env.NODE_ENV==="development"&&(t=URL.substr(0,URL.length-1)),t}async call(t,n,i){const s=this;i===void 0&&(i=!0);const d={"X-CSRFToken":window.csrfToken,"X-Requested-With":"XMLHttpRequest","Content-Type":"application/json"};return new Promise(function(c,u){if(window.NO_NETWORKING){console.warn("window.NO_NETWORKING=true"),console.log(t,n);const a=window.TEST_PAYLOAD,r=new f(a);c(r)}else s.send({url:s.baseUrl()+"/GOTO/"+t+"/",body:n,method:"POST",handleAs:"json",headers:d,withCredentials:!0}).then(function(a){const r=a.response;if(i){const h=new f(r);if(h.containsServiceCommand(m)){const l=h.parse(m,!1).url;var o=document.createElement("a");o.href=l,o.pathname===window.location.pathname&&o.search===window.location.search?(window.location.hash=o.hash,window.location.reload()):window.location.href=l}c(h)}else c(r)}).catch(function(a){u(a)})})}send(t){return document.createElement("iron-request").send(t)}},T=e=>class extends x(e){constructor(){super()}uploadTempFile(t,n,i,s){const d=this;return new Promise(function(c,u){i&&!t.type.match(i)&&(w.i.incompleteDev("File type not supported!"),u(new Error("File not supported!")));let a;s!=null?a=s:a=12e6,t.size>a&&u(new Error("File Size is Above allowed Limit of "+a+" bytes!"));const r=new FileReader;r.onload=function(h){d.send({url:d.baseUrl()+"/api/upload-temp-file/",body:o,method:"POST",handleAs:"json",headers:{"X-File-Name":t.name,"X-File-Size":t.size,"X-File-Type":t.type}}).then(p=>{const l=p.response;"response_status"in l&&l.response_status===y?c({name:t.name,response:l.response,result:h.target.result}):"response"in l?u(new Error(l.response)):(console.error("[this should never happen]"),u(new Error("Upload Failed."))),c(p)}).catch(p=>{u(p)})},r.readAsDataURL(t);const o=new FormData;o.append(n,t)})}};export{T as f};
